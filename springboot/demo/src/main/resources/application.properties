# 系统端口指定
server.port=9090
# web上下文配置
# 一般正常系统都是这样的，system-name/api/v1.0/xxx
server.servlet.context-path=/springboot-demo

# tomcat参数设置
# 打开tomcat访问日志
#server.tomcat.accesslog.enabled=true
# 访问日志所在的目录
#server.tomcat.accesslog.directory=F:/logs
# 允许HTTP请求缓存到请求队列的最大个数，默认是不限制的
#server.tomcat.accept-count=
# 最大连接数，默认是不限制的，如果连接数达到了上限，那么剩下的连接就会保存到请求缓存队列里，也就是上面参数指定的个数
#server.tomcat.max-connections=
# 最大工作线程数
#server.tomcat.max-threads=
# HTTP POST内容最大长度，默认不限制
#server.tomcat.max-http-post-size=

# spring boot应用的配置
# spring boot的核心思想，将分散在各个xml中的乱七八糟的配置，全部集中到一个地方来
# 集中到application.properties中，便于我们来管理所有的配置项

# devtools支持代码同步到远程服务器的密码设置
# spring.devtools.remote.secret=123456

# mysql连接配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/keepal?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# 连接池的配置信息
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 